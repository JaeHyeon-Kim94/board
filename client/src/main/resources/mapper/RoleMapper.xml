<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.oauth2.client.role.RoleMapper">

    <resultMap id="rolesWithParentResultMap" type="io.oauth2.client.role.Role">
        <id property="id"               column="c_id"/>
        <result property="description"  column="c_role_desc"/>
        <result property="name"         column="c_role_name"/>
        <association property="parent" javaType="io.oauth2.client.role.Role">
            <id property="id"               column="p_id"/>
            <result property="description"  column="p_role_desc"/>
            <result property="name"         column="p_role_name"/>
        </association>
    </resultMap>

    <insert id="insert" parameterType="Map">
        INSERT INTO tb_role(
            id,     parent_id,      role_desc,      role_name
        )
        VALUES(
            #{role.id},  #{parentId, jdbcType=VARCHAR}, #{role.description, jdbcType=VARCHAR}, #{role.name}
        )
    </insert>

    <update id="updateRole" parameterType="Map">
        UPDATE tb_role
        SET
            parent_id       = #{parentId,           jdbcType=VARCHAR},
            role_desc       = #{role.description,   jdbcType=VARCHAR},
            role_name       = #{role.name}
        WHERE
            id              = #{role.id}
    </update>

    <delete id="deleteRole" parameterType="string">
        DELETE FROM tb_role
        WHERE id = #{roleId}
    </delete>

    <select id="findById" resultMap="rolesWithParentResultMap">
        SELECT c.id AS c_id,    c.role_desc AS c_role_desc, c.role_name AS c_role_name,
        p.id AS p_id,    p.role_desc AS p_role_desc, p.role_name AS p_role_name
        FROM
        tb_role AS c
        LEFT OUTER JOIN tb_role AS p ON c.parent_id = p.id
        WHERE c.id = #{roleId}
    </select>

    <select id="findAll" resultMap="rolesWithParentResultMap">
        SELECT c.id AS c_id,    c.role_desc AS c_role_desc, c.role_name AS c_role_name,
        p.id AS p_id,    p.role_desc AS p_role_desc, p.role_name AS p_role_name
        FROM
        tb_role AS c
        LEFT OUTER JOIN tb_role AS p ON c.parent_id = p.id
    </select>

    <select id="findRoles" resultMap="rolesWithParentResultMap" parameterType="Map">
        SELECT c.id AS c_id,    c.role_desc AS c_role_desc, c.role_name AS c_role_name,
        p.id AS p_id,    p.role_desc AS p_role_desc, p.role_name AS p_role_name
        FROM
        tb_role AS c
        LEFT OUTER JOIN tb_role AS p ON c.parent_id = p.id
        LIMIT #{offset}, #{size}
    </select>

    <select id="findRolesCount" resultType="int">
        SELECT COUNT(*) FROM tb_role;
    </select>
</mapper>