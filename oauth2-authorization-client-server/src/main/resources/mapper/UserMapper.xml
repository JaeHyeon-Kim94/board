<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.oauth.oauth2authorizationclientserver.security.repository.user.UserMapper">
    <resultMap id="userWithRolesResultMap"  type="User">
        <id property="userId"                     column="user_id"/>
        <id property="providerId"             column="provider_id"/>
        <result property="password"           column="password"/>
        <result property="fullname"                     column="fullname"/>
        <result property="nickname"                     column="nickname"/>
        <result property="phone"                        column="phone"/>
        <result property="email"                        column="email"/>
        <result property="birth"                        column="birth"/>
        <result property="regDate"                      column="reg_date"/>
        <result property="modDate"                      column="mod_date"/>
        <collection property="roles"              ofType="Role">
            <id property="id"                           column="id"/>
            <result property="description"              column="role_desc"/>
            <result property="name"                     column="role_name"/>
        </collection>
    </resultMap>

    <insert id="insert" parameterType="Map">
        INSERT INTO tb_user(
            user_id,        provider_id,
            password,       fullname,
            nickname,       phone,
            email,          birth
        )
        VALUES(
            #{user.userId},         #{user.providerId   , jdbcType=VARCHAR},
            #{user.password},       #{user.fullname     , jdbcType=VARCHAR},
            #{user.nickname},       #{user.phone        , jdbcType=VARCHAR},
            #{user.email},          #{user.birth        , jdbcType=TIMESTAMP}
        );
        INSERT INTO tb_user_role(
            tb_role_id,     tb_user_user_id
        )
        VALUES(
            #{roleId},      #{user.userId}
        );
    </insert>

    <update id="update" parameterType="User">
        UPDATE tb_user
        SET
            password    =   #{password, jdbcType=VARCHAR},
            fullname    =   #{fullname, jdbcType=VARCHAR},
            nickname    =   #{nickname, jdbcType=VARCHAR},
            phone       =   #{phone,    jdbcType=VARCHAR},
            email       =   #{email,    jdbcType=VARCHAR},
            birth       =   #{birth,    jdbcType=TIMESTAMP}
        WHERE
            user_id = #{userId}
    </update>

    <delete id="deleteByUserId">
        DELETE FROM tb_user
        WHERE user_id = #{userId}
    </delete>

    <select id="isDuplicate" resultType="boolean">
        SELECT IF(COUNT(*) >=1, 0, 1)
        FROM tb_user
        <if test="type.equals('nickname')">
            WHERE nickname = #{value}
        </if>
        <if test="type.equals('userId')">
            WHERE userId = #{value}
        </if>
    </select>

    <sql id="selectUserWithRolesSql">
        SELECT
            u.user_id,      u.provider_id,  u.password,
            u.fullname,     u.nickname,     u.phone,
            u.email,        u.birth,        u.reg_date,
            u.mod_date,

            r.id, r.role_desc, r.role_name
        FROM
            tb_user AS u
        INNER JOIN
            tb_user_role AS ur
            ON u.user_id = ur.tb_user_user_id
        INNER JOIN
            tb_role AS r
            ON r.id = ur.tb_role_id
    </sql>

    <select id="findByUserId" resultMap="userWithRolesResultMap">
        <include refid="selectUserWithRolesSql"/>
        WHERE u.user_id = #{userId}
    </select>
</mapper>