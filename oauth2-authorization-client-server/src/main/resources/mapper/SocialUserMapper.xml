<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.oauth.oauth2authorizationclientserver.security.repository.socialuser.SocialUserMapper">
    <resultMap id="socialUserWithRolesResultMap"  type="SocialUser">
        <id property="socialUserId"                     column="social_user_id"/>
        <id property="clientRegistrationId"             column="client_registration_id"/>
        <result property="fullName"                     column="full_name"/>
        <result property="nickname"                     column="nickname"/>
        <result property="phone"                        column="phone"/>
        <result property="email"                        column="email"/>
        <result property="birth"                        column="birth"/>
        <result property="regDate"                      column="reg_date"/>
        <result property="modDate"                      column="mod_date"/>
        <collection property="roles"              ofType="Role">
            <id property="id"                           column="id"/>
            <result property="description"              column="role_desc"/>
            <result property="name"                     column="role_name"/>
        </collection>
    </resultMap>


    <insert id="insert" parameterType="SocialUser">
        INSERT INTO tb_social_user
            (client_registration_id, social_user_id, full_name, nick_name, phone, email, birth)
        VALUES
        (
              #{clientRegistrationId},          #{socialUserId},            #{fullName, jdbcType=VARCHAR}
            , #{nickname, jdbcType=VARCHAR},    #{phone, jdbcType=VARCHAR}, #{email, jdbcType=VARCHAR}
            , #{birth, jdbcType=TIMESTAMP}
        )
    </insert>

    <update id="update" parameterType="SocialUser">
        UPDATE tb_social_user
        SET
        (
            full_name = #{fullName, jdbcType=VARCHAR}
        ,   nick_name = #{nickname, jdbcType=VARCHAR}
        ,   phone     = #{phone,    jdbcType=VARCHAR}
        ,   email     = #{email,    jdbcType=VARCHAR}
        ,   birth     = #{birth,    jdbcType=TIMESTAMP} `
        )
        WHERE social_user_id = #{socialUserId} AND client_registration_id = #{clientRegistrationId}
    </update>

    <delete id="deleteByUsernameAndClientRegistrationId">
        DELETE tb_social_user
        WHERE social_user_id = #{socialUserId} AND client_registration_id = #{clientRegistrationId}
    </delete>

    <select id="findByUsernameAndClientRegistrationId" resultMap="socialUserWithRolesResultMap">
        SELECT
            su.social_user_id,      su.client_registration_id,      su.full_name,
            su.nickname,            su.phone,                       su.email,
            su.birth                su.reg_date,                    su.mod_date,
            r.id,                   r.role_desc,                    r.role_name
        FROM
            tb_social_user AS su
        INNER JOIN
            tb_role AS r
        ON
            su.social_user_id = r.social_user_id AND su.client_registration_id = r.client_registration_id
        WHERE
            su.social_user_id = #{socialUserId} AND su.client_registration_id =
    </select>

</mapper>